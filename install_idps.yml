---
- hosts: 127.0.0.1
  connection: local

  tasks:
   - name: Install Fail2ban
     apt: pkg=fail2ban state=installed update_cache=true
     
   - name: Copy configuration files   
     copy: src={{ item.src }} dest={{ item.dest }}
     with_items:
       - { src: './config/idps/jail.local', dest: '/etc/fail2ban/' }
       - { src: './config/idps/middleware.conf', dest: '/etc/fail2ban/filter.d/' }
       - { src: './config/idps/iptables-middleware.conf', dest: '/etc/fail2ban/action.d/' }
     
     become: yes
  
   - name: Restart Fail2ban
     service: name=fail2ban state=restarted
     become: yes

   - name: Ensure apt cache is up to date
     apt: update_cache=yes
  
   - name: Ensure packages are installed
     apt: name={{item}}
     with_items:
        - postgresql-9.3
        - libpq-dev
        - python-psycopg2
   
   - name: Delete default Postgresql configuration file
     shell: sudo rm /etc/postgresql/9.3/main/pg_hba.conf
     ignore_errors: yes
   
   - name: Copy postgresql config file
     copy: src={{item.src}} dest={{item.dest}}
     with_items:
       - {src: './config/idps/pg_hba.conf', dest: '/etc/postgresql/9.3/main/'}
   
  vars_prompt:
    
    - name: "db_password"
      prompt: "Enter password for database"
      private: yes

    - name: "hmac_key"
      prompt: "Enter HMAC key for securing logs"
      private: yes

  vars:
     dbname: rbccps
     dbuser: idps
     dbpassword: "{{db_password}}"

  tasks:  
   - name: Create file for IDPS
     file:
        path: ./key.conf
        state: touch
        mode: "u+rwx,g+rwx,o+rwx"
   
   - name: Change owner of file
     shell: sudo chown $(whoami) key.conf
    
   - name: Copy keys (1/2)
     blockinfile:
       path: ./key.conf
       insertafter: EOF
       content: "{{db_password}}"
    
   - name: Copy keys (2/2)
     blockinfile:
       path: ./key.conf
       insertafter: EOF
       content: "{{hmac_key}}"
  
   - name: Encrypt the file
     shell: ansible-vault encrypt key.conf 

   - name: Make vars persistant
     set_fact:
       dbname: "{{dbname}}"
       dbuser: "{{dbuser}}"
       dbpassword: "{{dbpassword}}

- hosts: 127.0.0.1
  connection: local
  become: yes
  become_user: postgres
  gather_facts: no

  tasks:
   - name: Ensure database is created
     postgresql_db: name={{hostvars.localhost.dbname}}

   - name: Ensure user has access to database
     postgresql_user: db={{hostvars.localhost.dbname}} name={{hostvars.localhost.dbuser}} password={{hostvars.localhost.dbpassword}} priv=ALL

   - name: Ensure user does not have unnecessary privilege 
     postgresql_user: name={{hostvars.localhost.dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB
  
   - name: Ensure no other user can access the database
     postgresql_privs: db={{hostvars.localhost.dbname}} role=PUBLIC type=database priv=ALL state=absent